{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/leads/leads.component.css","webpack:///./src/app/leads/leads.component.html","webpack:///./src/app/leads/leads.component.ts","webpack:///./src/app/oppotunities/oppotunities.component.css","webpack:///./src/app/oppotunities/oppotunities.component.html","webpack:///./src/app/oppotunities/oppotunities.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kIAAkI,kBAAkB,SAAS,UAAU,kBAAkB,sBAAsB,qhBAAqhB,4CAA4C,0gBAA0gB,sBAAsB,6DAA6D,sBAAsB,2DAA2D,sBAAsB,gCAAgC,WAAW,KAAK,wLAAwL,qGAAqG,iDAAiD,gBAAgB,gBAAgB,qD;;;;;;;;;;;;;;;;;;;;;ACAx0D;AAO1C;IALA;QAME,UAAK,GAAG,OAAO,CAAC;IAClB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACU;AACqB;AAc9E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,0FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,qD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;ACPlC;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<table class=\\\"table\\\" style=\\\"z-index:5;position:absolute;top:26px;width:82%;text-align:center;vertical-align:middle;filter: DropShadow(Color=#333333, OffX=1, OffY=1, Positive=true)\\\">\\r\\n  <tr>\\r\\n    <th class=\\\"GridTitle\\\">\\r\\n      @Html.DisplayNameFor(model => model.NAME)\\r\\n    </th>\\r\\n    <th class=\\\"GridTitle\\\">\\r\\n      @Html.DisplayNameFor(model => model.PHONE)\\r\\n    </th>\\r\\n    <th class=\\\"GridTitle\\\">\\r\\n      @Html.DisplayNameFor(model => model.FAX)\\r\\n    </th>\\r\\n    <th class=\\\"GridTitle\\\">\\r\\n      @Html.DisplayNameFor(model => model.EMAIL)\\r\\n    </th>\\r\\n    <th class=\\\"GridTitle\\\"></th>\\r\\n  </tr>\\r\\n  @if(Model.Any()){\\r\\n\\r\\n  foreach (var item in Model)\\r\\n  {\\r\\n  <tr>\\r\\n    <td class=\\\"GridItem GridItemHlip\\\">\\r\\n      @Html.DisplayFor(modelItem => item.NAME)\\r\\n    </td>\\r\\n    <td class=\\\"GridItem GridItemHlip\\\">\\r\\n      @Html.DisplayFor(modelItem => item.PHONE)\\r\\n    </td>\\r\\n    <td class=\\\"GridItem GridItemHlip\\\">\\r\\n      @Html.DisplayFor(modelItem => item.FAX)\\r\\n    </td>\\r\\n    <td class=\\\"GridItem GridItemHlip\\\">\\r\\n      @Html.DisplayFor(modelItem => item.EMAIL)\\r\\n    </td>\\r\\n    <td class=\\\"GridItem\\\">\\r\\n      @Html.ActionLink(\\\"Edit\\\", \\\"Edit\\\", new { id = item.COMPANYID }) |\\r\\n      @Html.ActionLink(\\\"Details\\\", \\\"Details\\\", new { id = item.COMPANYID }) |\\r\\n      @Html.ActionLink(\\\"Delete\\\", \\\"Delete\\\", new { id = item.COMPANYID })\\r\\n    </td>\\r\\n  </tr>\\r\\n  }\\r\\n\\r\\n  }else{\\r\\n  <tr>\\r\\n    <td class=\\\"GridItem GridItemHlip\\\">\\r\\n      <span style=\\\"color:red\\\"> The are no records at the moment, please check back</span>\\r\\n    </td>\\r\\n  </tr>\\r\\n\\r\\n  }\\r\\n\\r\\n  <tr>\\r\\n    <td id=\\\"footerTd\\\" class=\\\"GridTitle\\\" colspan=\\\"10\\\">\\r\\n      Records:&nbsp;<span id=\\\"Elements\\\">@Model.Count()</span>&nbsp;\\r\\n      &nbsp;\\r\\n      &nbsp;\\r\\n\\r\\n    </td>\\r\\n\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LeadsComponent } from './leads/leads.component';\nimport { OppotunitiesComponent } from './oppotunities/oppotunities.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LeadsComponent,\n    OppotunitiesComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  leads works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leads',\n  templateUrl: './leads.component.html',\n  styleUrls: ['./leads.component.css']\n})\nexport class LeadsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  oppotunities works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oppotunities',\n  templateUrl: './oppotunities.component.html',\n  styleUrls: ['./oppotunities.component.css']\n})\nexport class OppotunitiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}